<script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'main-search.js' | asset_url }}" defer="defer"></script>

<style>
draggable-menu {
    display: block;
    position: fixed;
    width: 80px;
    height: 80px;
    z-index: 999;
}

    .menu-drawer__navigation {
        display: none;
        background: rgb(48,48,51);
    background: linear-gradient(90deg, rgba(48,48,51,1) 0%, rgba(155,153,157,1) 100%);
        border-radius:20px;
        width: fit-content;
        margin:auto;
    }

.menu {
    display: block!important;
    width: 130px;
    height: 130px;
    border-radius: 50%;
    /* background-color: lightgray; */
    background-image: url(https://cdn.shopify.com/s/files/1/0794/5106/2557/files/Menu_Buttons.png?v=1697635184);
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    position: absolute;
    cursor: pointer;
    transition: top 0.3s, left 0.3s; /* Smooth transition for top and left properties */
    /* bottom:50px; */
    display: flex;
    justify-content: center;
    align-items: center;
    color: #fff;
    text-transform: uppercase;
    font-size: 1.5rem;
}
li.menu-item {
    font-family: 'BlackMango-Regular';
    font-size: 2rem;
}

li.menu-item.menu-item2 {
    font-family: 'Avenir Regular';
    font-size: 1rem;
    letter-spacing: .5rem;
}
.point {
    width: 30px;
    height: 30px;
    /* background-color: red; */
    position: absolute;
}

.point.left {
    top: 50%;
    left: 20px;
    transform: translateY(-50%);
}

.point.bottom-left {
    bottom: 30px;
    left: 20px;
}

.point.bottom {
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
}

.point.bottom-right {
    bottom: 30px;
    right: 20px;
}

.point.right {
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
}

/* MENU STYLE */
ul.menu-list {
    display: none;
    position: absolute;
    top: -350px;
    /* background: rgb(79,85,78);
    background: linear-gradient(130deg, rgba(79,85,78,1) 0%, rgba(71,77,78,1) 43%, rgba(151,174,188,1) 100%); */
    background-image: url(https://cdn.shopify.com/s/files/1/0794/5106/2557/files/Menu_Box_-_no_text.png?v=1697635138);
    background-position: center;
    background-repeat: no-repeat;
    list-style: none;
    padding: 10px 20px;
    border-radius: 5px;
    left: -60px;
    right: 0;
    margin: auto;
    width: 100%;
    min-width: 240px;
    transition: all 1s linear;
    box-shadow: 3px 3px 15px #585858;
}

.menu-open ul.menu-list {
    display: flex;
    flex-direction: column;
    transition: all 1s linear;
}

ul.menu-list li.menu-item {
    width: max-content;
    margin: auto;
}

li.search-bar{
    margin-bottom: 30px!important;
}

li.menu-item.menu-item2 {
    margin-top: 30px!important;
}
li.menu-item.menu-item2 a{
    text-transform: uppercase!important;
}

li.menu-item.menu-item2:last-child {
    margin-top: 0!important;
}

ul.menu-list li:hover {
    list-style-type: initial;
}

ul.menu-list a {
    color: #fff;
    text-decoration: none;
    text-transform: capitalize;
}

li.search-bar:hover {
    list-style-type: none!important;
}

/* SEARCH BAR */
.template-search {
    height: auto;
    display: flex;
    gap: 10px;
    align-items: center;
    /* max-width: 250px; */
}
form#custom-search-form {
    display: flex;
    align-content: flex-start;
    gap: 20px;
}

#custom-search-form button {
    border: none;
    background: unset;
}

#custom-search-form button svg {
    color: #fff;
    width: 20px;
    height: auto;
}

#custom-search-form 
 input#search {
    color: #fff;
    background: unset;
    border: none;
}

#custom-search-form input#search:focus-visible {
    border: none!important;
    box-shadow: none;
    outline: none;
}

#custom-search-form input#search::placeholder {
    color: #ffffff96;
    font-style: italic;
}

.template-search svg {
    color: #fff;
}
.search-box svg {
    width: 20px;
    height: 20px;
}

div#search-icon .open-search-box {
    display: block;
}
div#search-icon .close-search-box {
    display: none;
}
div#search-icon .close-search-box svg{
    width: 15px;
    height: 15px;
}


div#search-icon[data-open-search] .close-search-box {
    display: block;
}
div#search-icon[data-open-search] .open-search-box {
    display: none;
}
div#search-icon {
color: #fff;
}

.template-search__header {
    display: none;
}

div#search-icon[data-open-search]~.template-search__header{
    display: block;
}

.template-search .field:before {
    display: none;
}

.template-search .field:after {
    display: none;
}

.template-search label.field__label {
    color: #fff;
    font-size: 1rem;
    font-style: italic;
    width: fit-content;
    left: 0;
    right: 0;
    margin: auto;
}

.template-search input#Search-In-Template {
    background: transparent;
    padding-right: 1.5rem;
    color: #fff;
}

.template-search input#Search-In-Template:focus-visible{
    box-shadow: unset;
}

.template-search input#Search-In-Template:focus-visible~label.field__label{
    opacity: .5;
}

.predictive-search {
    max-height: 400px!important;
}

/* Position search block */
.predictive-search.predictive-search--search-template {
    width: 560px;
    left: -21rem;
}

@media (max-width:480px){
    .predictive-search.predictive-search--search-template {
        width: 300px;
        left: -70px;        
    }
}
</style>
    
<draggable-menu></draggable-menu>

<script>
    var menuData = [
        {% for link in section.settings.menu.links %}
        {
            "title": "{{ link.title | escape }}",
            "url": "{{ link.url | escape }}"
        }
        {% unless forloop.last %},{% endunless %}
        {% endfor %}
    ];

    var menuData2 = [
        {% for link in section.settings.second-menu.links %}
        {
            "title": "{{ link.title | escape }}",
            "url": "{{ link.url | escape }}"
        }
        {% unless forloop.last %},{% endunless %}
        {% endfor %}
    ];

    class DraggableMenu extends HTMLElement {
        constructor() {
            super();

            this.isDragging = false;
            this.startX = 0;
            this.startY = 0;
            this.menuStartX = 0;
            this.menuStartY = 0;
            this.points = {
                'left': { x: 100, y: window.innerHeight / 2 },
                'bottom-left': { x: 100, y: window.innerHeight - 100 },
                'bottom': { x: window.innerWidth / 2, y: window.innerHeight - 100 },
                'bottom-right': { x: window.innerWidth - 100, y: window.innerHeight - 100 },
                'right': { x: window.innerWidth - 100, y: window.innerHeight / 2 }
            };

            this.menu = document.createElement('div');
            this.menu.className = 'menu';
            this.appendChild(this.menu);

            // Create the menu list container
            this.menuList = document.createElement('ul');
            this.menuList.className = 'menu-list';
            this.menu.appendChild(this.menuList);

            // Set the initial position to 'bottom'
            this.menu.style.left = `${this.points['bottom'].x - this.menu.offsetWidth / 2}px`;
            this.menu.style.top = `${this.points['bottom'].y - this.menu.offsetHeight / 2}px`;

            // Add draggable points (just for visual reference)
            for (let position in this.points) {
                let point = document.createElement('div');
                point.className = `point ${position}`;
                this.appendChild(point);
            }

            this.menu.addEventListener('mousedown', (e) => {
                this.isDragging = true;
                this.startX = e.clientX;
                this.startY = e.clientY;
                let rect = this.menu.getBoundingClientRect();
                this.menuStartX = rect.left;
                this.menuStartY = rect.top;
                // Add a class to prevent text selection
                document.body.classList.add('no-select');
            });

            window.addEventListener('mousemove', (e) => {
                if (this.isDragging) {
                    let dx = e.clientX - this.startX;
                    let dy = e.clientY - this.startY;

                    this.menu.style.left = `${this.menuStartX + dx}px`;
                    this.menu.style.top = `${this.menuStartY + dy}px`;
                }
            });

            window.addEventListener('mouseup', () => {
                if (this.isDragging) {
                    this.isDragging = false;

                    // Remove the class to allow text selection
                    document.body.classList.remove('no-select');

                    // Snap to closest point
                    let menuCenter = {
                        x: this.menu.offsetLeft + this.menu.offsetWidth / 2,
                        y: this.menu.offsetTop + this.menu.offsetHeight / 2
                    };
                    let closestPoint = null;
                    let closestDistance = Infinity;

                    for (let position in this.points) {
                        let point = this.points[position];
                        let dx = point.x - menuCenter.x;
                        let dy = point.y - menuCenter.y;
                        let distance = Math.sqrt(dx * dx + dy * dy);

                        if (distance < closestDistance) {
                            closestDistance = distance;
                            closestPoint = point;
                        }
                    }

                    this.menu.style.left = `${closestPoint.x - this.menu.offsetWidth / 2}px`;
                    this.menu.style.top = `${closestPoint.y - this.menu.offsetHeight / 2}px`;

                    // Position menu list items based on menu's position
                    this.positionMenuListItems(closestPoint);
                }
            });

            // Add a click event listener to the menu to toggle the visibility of menu items
            // Existing event listener for the 'menu'

            const headerDrawer = document.getElementById('shopify-section-header-drawer');
            this.menu.addEventListener('click', (event) => {
                // Check if the click occurred inside the menu
                if (!event.target.closest('.menu-list')) {
                    // If not a click inside the menu list, toggle the 'menu-open' class
                    this.menu.classList.toggle('menu-open');
                    headerDrawer.classList.toggle('menu-overlay');
                    console.log("Header Drawer: "+ headerDrawer);
                }
            });

            // Concatenate menuData2 with menuData
            const combinedMenuData = menuData.concat(menuData2);

            // Load menu items from the combined data
            const menuItems = combinedMenuData.map(item => {
                // Check if the item comes from menuData2
                const isMenuData2Item = menuData2.includes(item);

                // Assign a class based on whether it's from menuData2 or not
                const itemClass = isMenuData2Item ? 'menu-item menu-item2' : 'menu-item';

                return `<li class="${itemClass}"><a href="${item.url}">${item.title}</a></li>`;
            });

            // Add the 'custom-header-search' snippet before the menu items
            const searchSnippet = `
                <!-- Add your custom-header-search snippet here -->
                <li class="search-bar">
                    <form id="custom-search-form" action="/search" method="get">
                        <button type="submit"><svg class="modal__toggle-open icon icon-search" fill="none" height="24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><circle cx="11" cy="11" r="8"/><line x1="21" x2="16.65" y1="21" y2="16.65"/></svg></button>
                        <input type="text" name="q" id="search" placeholder="Search products...">
                    </form>
                </li>
            `;

            // Combine the 'custom-header-search' snippet with the menu items
            const finalMenuItems = [searchSnippet, ...menuItems];

            // Add menu items to the menu list container
            this.menuList.innerHTML = finalMenuItems.join('');

        }

        positionMenuListItems(menuPosition) {
            const menuListItems = this.menuList;
            switch (menuPosition) {
                case this.points['bottom']:
                    // Position for bottom center
                    menuListItems.style.top = '-350px';
                    menuListItems.style.left = '-60px';
                    menuListItems.style.right = '0';
                    break;
                case this.points['left']:
                    // Position for left side
                    menuListItems.style.top = '-60px';
                    menuListItems.style.left = '150px';
                    menuListItems.style.right = 'unset';
                    break;
                case this.points['right']:
                    // Position for right side
                    menuListItems.style.top = '-60px';
                    menuListItems.style.left = 'unset';
                    menuListItems.style.right = '150px';
                    break;
                case this.points['bottom-right']:
                    // Position for right side
                    menuListItems.style.top = '-240px';
                    menuListItems.style.left = 'unset';
                    menuListItems.style.right = '130px';
                break;
                case this.points['bottom-left']:
                    // Position for right side
                    menuListItems.style.top = '-240px';
                    menuListItems.style.left = '130px';
                    menuListItems.style.right = 'unset';
                    break;
                default:
                    // Default position
                    menuListItems.style.top = '-350px';
                    menuListItems.style.left = '-60px';
                    menuListItems.style.right = '0';
                    break;
            }
        }

        connectedCallback() {
            const headerDrawer = document.getElementById('shopify-section-header-drawer');
        // Add a click event listener to the document to close the menu when clicking outside of it
            document.addEventListener('click', (event) => {
                if (!this.menu.contains(event.target)) {
                    // Click occurred outside the menu, so close it
                    this.menu.classList.remove('menu-open');
                    headerDrawer.classList.remove('menu-overlay');
                }
            });
        }

    }

    customElements.define('draggable-menu', DraggableMenu);

   
</script>

<script>
    // Get references to the elements
    const searchIcon = document.getElementById("search-icon");
    console.log('Search Icon: ' + searchIcon);
    
    searchIcon.addEventListener('click', function(){
        console.log('Second Search Icon: ' + searchIcon);
        //this.setAttribute('data-open-search', true);
        this.toggleAttribute("data-open-search");
    });
    
    </script>